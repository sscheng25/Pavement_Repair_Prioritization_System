LCcolors <- attr(EPcity_landcover, "legend")@colortable[LCcodes + 1]
names(LCcolors) <- as.character(LCcodes)
LCcolors
LCcolors <- attr(EPcity_landcover_df, "legend")@colortable[LCcodes + 1]
LCcodes <- c(11,12,21,22,23,24,31,41,
42,43,52,71,81,82,90,95)
LCnames <-c(
"Water",
"IceSnow",
"DevelopedOpen",
"DevelopedLow",
"DevelopedMed",
"DevelopedHigh",
"Barren",
"DeciduousForest",
"EvergreenForest",
"MixedForest",
"ShrubScrub",
"GrassHerbaceous",
"PastureHay",
"CultCrops",
"WoodyWetlands",
"EmergentHerbWet")
LCcolors <- attr(EPcity_landcover_df, "legend")@colortable[LCcodes + 1]
LCcodes <- c(11,12,21,22,23,24,31,41,
42,43,52,71,81,82,90,95)
library(colorspace)
library(colorspace)
LCcodes <- c(11,12,21,22,23,24,31,41,
42,43,52,71,81,82,90,95)
LCnames <-c(
"Water",
"IceSnow",
"DevelopedOpen",
"DevelopedLow",
"DevelopedMed",
"DevelopedHigh",
"Barren",
"DeciduousForest",
"EvergreenForest",
"MixedForest",
"ShrubScrub",
"GrassHerbaceous",
"PastureHay",
"CultCrops",
"WoodyWetlands",
"EmergentHerbWet")
LCcolors <- attr(EPcity_landcover_df, "legend")@colortable[LCcodes + 1]
LCcolors <- attr(EPcity_landcover, "legend")@colortable[LCcodes + 1]
names(LCcolors) <- as.character(LCcodes)
LCcolors
View(EPcity_landcover_df)
library(colorspace)
library(rgdal)
library(RColorBrewer)
library(rasterVis)
install.packages("rasterVis")
library(colorspace)
library(rgdal)
library(RColorBrewer)
library(rasterVis)
library(readr)
LCcodes <- c(11,12,21,22,23,24,31,41,
42,43,52,71,81,82,90,95)
LCnames <-c(
"Water",
"IceSnow",
"DevelopedOpen",
"DevelopedLow",
"DevelopedMed",
"DevelopedHigh",
"Barren",
"DeciduousForest",
"EvergreenForest",
"MixedForest",
"ShrubScrub",
"GrassHerbaceous",
"PastureHay",
"CultCrops",
"WoodyWetlands",
"EmergentHerbWet")
LCcolors <- attr(EPcity_landcover, "legend")@colortable[LCcodes + 1]
names(LCcolors) <- as.character(LCcodes)
LCcolors
LCcolors <- attr(EPcity_landcover, "value")@colortable[LCcodes + 1]
names(LCcolors) <- as.character(LCcodes)
LCcolors
LCcolors <- attr(EPcity_landcover, "value")@colortable[LCcodes + 1]
LCcolors <- attr(EPcity_landcover, value)@colortable[LCcodes + 1]
LCcolors <- attr(EPcity_landcover, legend)@colortable[LCcodes + 1]
# preprocessing of the raster completed in ArcGIS Pro
EPcity_landcover <-
raster("Data/Data_from_ArcGIS/EPcity_NLCD.tif")
plot(EPcity_landcover)
rasterdf <- function(x, aggregate = 1) {
resampleFactor <- aggregate
inputRaster <- x
inCols <- ncol(inputRaster)
inRows <- nrow(inputRaster)
# Compute numbers of columns and rows in the new raster for mapping
resampledRaster <- raster(ncol=(inCols / resampleFactor),
nrow=(inRows / resampleFactor))
# Match to the extent of the original raster
extent(resampledRaster) <- extent(inputRaster)
# Resample data on the new raster
y <- resample(inputRaster,resampledRaster,method='ngb')
# Extract cell coordinates
coords <- xyFromCell(y, seq_len(ncell(y)))
dat <- stack(as.data.frame(getValues(y)))
# Add names - 'value' for data, 'variable' to indicate different raster layers
# in a stack
names(dat) <- c('value', 'variable')
dat <- cbind(coords, dat)
dat
}
EPcity_landcover_df <- rasterdf(EPcity_landcover)
ggplot(data = EPcity_landcover_df) +
geom_raster(aes(x = x, y = y, fill = value))
library(colorspace)
library(rgdal)
library(RColorBrewer)
library(rasterVis)
library(readr)
LCcodes <- c(11,12,21,22,23,24,31,41,
42,43,52,71,81,82,90,95)
LCnames <-c(
"Water",
"IceSnow",
"DevelopedOpen",
"DevelopedLow",
"DevelopedMed",
"DevelopedHigh",
"Barren",
"DeciduousForest",
"EvergreenForest",
"MixedForest",
"ShrubScrub",
"GrassHerbaceous",
"PastureHay",
"CultCrops",
"WoodyWetlands",
"EmergentHerbWet")
LCcolors <- attr(EPcity_landcover, legend)@colortable[LCcodes + 1]
LCcolors <- attr(EPcity_landcover, "legend")@colortable[LCcodes + 1]
names(LCcolors) <- as.character(LCcodes)
LCcolors
rasterdf <- function(x, aggregate = 1) {
resampleFactor <- aggregate
inputRaster <- x
inCols <- ncol(inputRaster)
inRows <- nrow(inputRaster)
# Compute numbers of columns and rows in the new raster for mapping
resampledRaster <- raster(ncol=(inCols / resampleFactor),
nrow=(inRows / resampleFactor))
# Match to the extent of the original raster
extent(resampledRaster) <- extent(inputRaster)
# Resample data on the new raster
y <- resample(inputRaster,resampledRaster,method='ngb')
# Extract cell coordinates into a data frame
coords <- xyFromCell(y, seq_len(ncell(y)))
# Extract layer names
dat <- stack(as.data.frame(getValues(y)))
# Add names - 'value' for data, 'variable' to indicate different raster layers
# in a stack
names(dat) <- c('value', 'variable')
dat <- cbind(coords, dat)
dat
}
EPcity_landcover_df <- rasterdf(EPcity_landcover)
ggplot(data = EPcity_landcover_df) +
geom_raster(aes(x = x, y = y, fill = value))
library(sp)
LCcodes <- c(11,12,21,22,23,24,31,41,42,43,52,71,81,82,90,95)
LCnames <-c(
"Water",
"IceSnow",
"DevelopedOpen",
"DevelopedLow",
"DevelopedMed",
"DevelopedHigh",
"Barren",
"DeciduousForest",
"EvergreenForest",
"MixedForest",
"ShrubScrub",
"GrassHerbaceous",
"PastureHay",
"CultCrops",
"WoodyWetlands",
"EmergentHerbWet")
LCcolors <- attr(EPcity_landcover, "legend")@colortable[LCcodes + 1]
names(LCcolors) <- as.character(LCcodes)
LCcolors
View(EPcity_landcover)
EPcity_landcover@legend
# preprocessing of the raster completed in ArcGIS Pro
EPcity_landcover <-
raster("Data/Data_NLCD/ElPasoArea_LandCover_ImperviousCover/NLCD_2019_Land_Cover_L48_20210604_hHjclStONh9yCsFQkZ5z.tiff")
plot(EPcity_landcover)
rasterdf <- function(x, aggregate = 1) {
resampleFactor <- aggregate
inputRaster <- x
inCols <- ncol(inputRaster)
inRows <- nrow(inputRaster)
# Compute numbers of columns and rows in the new raster for mapping
resampledRaster <- raster(ncol=(inCols / resampleFactor),
nrow=(inRows / resampleFactor))
# Match to the extent of the original raster
extent(resampledRaster) <- extent(inputRaster)
# Resample data on the new raster
y <- resample(inputRaster,resampledRaster,method='ngb')
# Extract cell coordinates into a data frame
coords <- xyFromCell(y, seq_len(ncell(y)))
# Extract layer names
dat <- stack(as.data.frame(getValues(y)))
# Add names - 'value' for data, 'variable' to indicate different raster layers
# in a stack
names(dat) <- c('value', 'variable')
dat <- cbind(coords, dat)
dat
}
EPcity_landcover_df <- rasterdf(EPcity_landcover)
ggplot(data = EPcity_landcover_df) +
geom_raster(aes(x = x, y = y, fill = value))
library(colorspace)
library(rgdal)
library(RColorBrewer)
library(rasterVis)
library(sp)
LCcodes <- c(11,12,21,22,23,24,31,41,42,43,52,71,81,82,90,95)
LCnames <-c(
"Water",
"IceSnow",
"DevelopedOpen",
"DevelopedLow",
"DevelopedMed",
"DevelopedHigh",
"Barren",
"DeciduousForest",
"EvergreenForest",
"MixedForest",
"ShrubScrub",
"GrassHerbaceous",
"PastureHay",
"CultCrops",
"WoodyWetlands",
"EmergentHerbWet")
LCcolors <- attr(EPcity_landcover, "legend")@colortable[LCcodes + 1]
names(LCcolors) <- as.character(LCcodes)
LCcolors
ggplot(data = EPcity_landcover) +
geom_raster(aes(x = x, y = y, fill = as.character(value))) +
scale_fill_manual(name = "Land cover",
values = LCcolors,
labels = LCnames[-2],
na.translate = FALSE) +
coord_sf(expand = F) +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_rect(fill = "white", color = "black"))
ggplot(data = EPcity_landcover_df) +
geom_raster(aes(x = x, y = y, fill = as.character(value))) +
scale_fill_manual(name = "Land cover",
values = LCcolors,
labels = LCnames[-2],
na.translate = FALSE) +
coord_sf(expand = F) +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_rect(fill = "white", color = "black"))
View(El_Paso_city)
## crop and mask
EPcity_landcover_crop <- crop(EPcity_landcover, extent(El_Paso_city))
# crop spatial df
EPcity_landcover_df <- st_as_sf()
# crop spatial df
EPcity_landcover_df <- EPcity_landcover_df %>% st_as_sf()
View(EPcity_landcover_df)
# Crop elevation data by extent of state subset
EPcity_landcover_df_sub <- crop(EPcity_landcover_df, extent(El_Paso_city))
EPcity_landcover <-
raster("Data/Data_NLCD/ElPasoArea_LandCover_ImperviousCover/NLCD_2019_Land_Cover_L48_20210604_hHjclStONh9yCsFQkZ5z.tiff")
# plot to see
plot(EPcity_landcover)
EPcity_landcover_df_sub <- mask(EPcity_landcover_df_sub, El_Paso_city)
```{r}
# Crop elevation data by extent of state subset
EPcity_landcover_df_sub <- crop(EPcity_landcover_df, extent(El_Paso_city))
# Crop elevation data by extent of state subset
EPcity_landcover_crop <- crop(EPcity_landcover, extent(El_Paso_city))
EPcity_landcover_reproject <- projectRaster(EPcity_landcover,
crs = crs(El_Paso_city))
# Crop elevation data by extent of state subset
EPcity_landcover_crop <- crop(EPcity_landcover_reproject, extent(El_Paso_city))
# Identify those pixels in raster that lie within the borders of the given shp. Use the 'mask' function for that.
EPcity_landcover_crop <- mask(EPcity_landcover_crop, El_Paso_city)
plot(EPcity_landcover_crop)
rasterdf <- function(x, aggregate = 1) {
resampleFactor <- aggregate
inputRaster <- x
inCols <- ncol(inputRaster)
inRows <- nrow(inputRaster)
# Compute numbers of columns and rows in the new raster for mapping
resampledRaster <- raster(ncol=(inCols / resampleFactor),
nrow=(inRows / resampleFactor))
# Match to the extent of the original raster
extent(resampledRaster) <- extent(inputRaster)
# Resample data on the new raster
y <- resample(inputRaster,resampledRaster,method='ngb')
# Extract cell coordinates into a data frame
coords <- xyFromCell(y, seq_len(ncell(y)))
# Extract layer names
dat <- stack(as.data.frame(getValues(y)))
# Add names - 'value' for data, 'variable' to indicate different raster layers
# in a stack
names(dat) <- c('value', 'variable')
dat <- cbind(coords, dat)
dat
}
library(colorspace)
library(rgdal)
library(RColorBrewer)
library(rasterVis)
library(sp)
LCcodes <- c(11,12,21,22,23,24,31,41,42,43,52,71,81,82,90,95)
LCnames <-c(
"Water",
"IceSnow",
"DevelopedOpen",
"DevelopedLow",
"DevelopedMed",
"DevelopedHigh",
"Barren",
"DeciduousForest",
"EvergreenForest",
"MixedForest",
"ShrubScrub",
"GrassHerbaceous",
"PastureHay",
"CultCrops",
"WoodyWetlands",
"EmergentHerbWet")
LCcolors <- attr(EPcity_landcover, "legend")@colortable[LCcodes + 1]
names(LCcolors) <- as.character(LCcodes)
LCcolors
# convert to df
EPcity_landcover_df <- rasterdf(EPcity_landcover_crop)
# crop spatial df
EPcity_landcover_df <- EPcity_landcover_df %>% st_as_sf()
# convert to df
EPcity_landcover_df <- rasterdf(EPcity_landcover_crop)
library(colorspace)
library(rgdal)
library(RColorBrewer)
library(rasterVis)
library(sp)
LCcodes <- c(11,12,21,22,23,24,31,41,42,43,52,71,81,82,90,95)
LCnames <-c(
"Water",
"IceSnow",
"DevelopedOpen",
"DevelopedLow",
"DevelopedMed",
"DevelopedHigh",
"Barren",
"DeciduousForest",
"EvergreenForest",
"MixedForest",
"ShrubScrub",
"GrassHerbaceous",
"PastureHay",
"CultCrops",
"WoodyWetlands",
"EmergentHerbWet")
LCcolors <- attr(EPcity_landcover, "legend")@colortable[LCcodes + 1]
names(LCcolors) <- as.character(LCcodes)
LCcolors
ggplot(data = EPcity_landcover_df) +
geom_raster(aes(x = x, y = y, fill = as.character(value))) +
scale_fill_manual(name = "Land cover",
values = LCcolors,
labels = LCnames[-2],
na.translate = FALSE) +
coord_sf(expand = F) +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_rect(fill = "white", color = "black"))
ggplot(data = EPcity_landcover_df) +
geom_raster(aes(x = x, y = y, fill = as.character(value))) +
scale_fill_manual(name = "Land cover",
values = LCcolors,
labels = LCnames[-2],
na.translate = FALSE) +
coord_sf(expand = F) +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_rect(fill = "white", color = "black")) + mapTheme()
axis.title.y = element_blank() + mapTheme()
ggplot(data = EPcity_landcover_df) +
geom_raster(aes(x = x, y = y, fill = as.character(value))) +
scale_fill_manual(name = "Land cover",
values = LCcolors,
labels = LCnames[-2],
na.translate = FALSE) +
coord_sf(expand = F) +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank() + mapTheme()
ggplot(data = EPcity_landcover_df) +
geom_raster(aes(x = x, y = y, fill = as.character(value))) +
scale_fill_manual(name = "Land cover",
values = LCcolors,
labels = LCnames[-2],
na.translate = FALSE) +
coord_sf(expand = F) +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank()) + mapTheme()
ggplot(data = EPcity_landcover_df) +
geom_raster(aes(x = x, y = y, fill = as.character(value))) +
scale_fill_manual(name = "Land cover",
values = LCcolors,
labels = LCnames[-2],
na.translate = FALSE) +
coord_sf(expand = F) +
geom_sf(data = center_line, aes(color = PCI_2018)) +
scale_color_viridis(direction=-1)+
theme(axis.title.x = element_blank(),
axis.title.y = element_blank()) + mapTheme()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, results = FALSE, message = FALSE)
library(tidyverse)
library(sf)
library(lubridate)
library(tigris)
library(tidycensus)
library(gganimate)
library(viridis)
library(riem)
library(gridExtra)
library(knitr)
library(kableExtra)
library(RSocrata)
library(caret)
library(purrr)
library(FNN)
library(stargazer)
library(dplyr)
library(spatstat)
library(raster)
library(spdep)
library(grid)
library(mapview)
library(stringr)
palette5 <- c("#eff3ff","#bdd7e7","#6baed6","#3182bd","#08519c")
palette4 <- c("#D2FBD4","#92BCAB","#527D82","#123F5A")
palette4_2 <- c("#83c8f9","#2984c3","#075d9a","#000066")
palette2 <- c("#6baed6","#08519c")
mapTheme <- function(base_size = 12) {
theme(
text = element_text( color = "black"),
plot.title = element_text(size = 16,colour = "black"),
plot.subtitle=element_text(face="italic"),
plot.caption=element_text(hjust=0),
axis.ticks = element_blank(),
panel.background = element_blank(),axis.title = element_blank(),
axis.text = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=2),
strip.text.x = element_text(size = 14))
}
plotTheme <- function(base_size = 12) {
theme(
text = element_text( color = "black"),
plot.title = element_text(size = 16,colour = "black"),
plot.subtitle = element_text(face="italic"),
plot.caption = element_text(hjust=0),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.major = element_line("grey80", size = 0.1),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=2),
strip.background = element_rect(fill = "grey80", color = "white"),
strip.text = element_text(size=12),
axis.title = element_text(size=12),
axis.text = element_text(size=10),
plot.background = element_blank(),
legend.background = element_blank(),
legend.title = element_text(colour = "black", face = "italic"),
legend.text = element_text(colour = "black", face = "italic"),
strip.text.x = element_text(size = 14)
)
}
# UNCOMMENT THE LINE BELOW IF YOU ARE RUNNING THE RMD
source("Jenna.R")
# Projection CRS: ESRI 102339 (NAD_1983_HARN_StatePlane_Texas_Central_FIPS_4203).
# Spatial unit: meter.
CIP_layer <- st_read("Data/Resurfacing/CIP_PRogram_Master_Layer.shp") %>%
st_transform('ESRI:102339')
center_line <- st_read("Data/PCI_Study/Centerline_with_Age.shp") %>%
st_transform('ESRI:102339')
EPCenterline <- st_read("Data/Penn/EPCenterline.shp") %>%
st_transform('ESRI:102339')
# Saved as .csv from file 'POTHOLES2013_2021.xls'
pot_holes <- read_csv("Data/POTHOLES2013_2021.csv")
pot_holes_sf <-
pot_holes %>%
subset(WORKORDERID!=588771) %>%
na.omit() %>%
st_as_sf(coords = c("WOXCOORDINATE", "WOYCOORDINATE"),
crs = 'epsg:2277',
agr = "constant") %>%
st_transform('ESRI:102339')
